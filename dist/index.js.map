{"version":3,"file":"index.js","sources":["../src/styles.ts","../src/errors.ts","../src/validators.ts","../src/index.tsx"],"sourcesContent":["import { StyleSheet } from 'react-native';\r\n\r\nconst colors = {\r\n    black: '#000000',\r\n    white: '#FFFFFF',\r\n    red: '#FF0000',\r\n};\r\n\r\nexport const styles = StyleSheet.create({\r\n    defaultInput: {\r\n        borderWidth: 2,\r\n        borderColor: colors.black,\r\n        paddingVertical: 0,\r\n        fontSize: 15,\r\n    },\r\n    defaultError: {\r\n        borderColor: colors.red,\r\n        alignItems: 'center',\r\n        marginBottom: 2,\r\n        paddingHorizontal: 5,\r\n    },\r\n    defaultErrorText: {\r\n        color: colors.red,\r\n        fontSize: 12,\r\n    },\r\n});\r\n","export const INVALID_EMAIL_FORMAT = 'Invalid email format';\r\nexport const VALIDATION_PASSED = 'Validation passed';\r\nexport const FIELD_IS_REQUIRED = 'Field is required';\r\nexport const INVALID_PHONE = 'Invalid phone';\r\nexport const INVALID_PASSWORD = `Password must be atleast 8 characters long and contain:\r\n- 1 UPPERCASE letter\r\n- 1 lowercase letter \r\n- 1 number `;\r\n","/* eslint-disable no-useless-escape */\r\nimport {\r\n    INVALID_EMAIL_FORMAT,\r\n    VALIDATION_PASSED,\r\n    FIELD_IS_REQUIRED,\r\n    INVALID_PHONE,\r\n    INVALID_PASSWORD,\r\n} from './errors';\r\n\r\ntype ValidatorResult = {\r\n    result: boolean;\r\n    reason: string;\r\n};\r\n\r\nconst basicValidator = (value: string): ValidatorResult => {\r\n    const result = value.length > 0;\r\n    return {\r\n        result,\r\n        reason: result ? `Basic ${VALIDATION_PASSED}` : FIELD_IS_REQUIRED,\r\n    };\r\n};\r\nconst emailValidator = (value: string): ValidatorResult => {\r\n    const result = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\r\n    return {\r\n        result,\r\n        reason: result ? `Email ${VALIDATION_PASSED}` : INVALID_EMAIL_FORMAT,\r\n    };\r\n};\r\n\r\nconst phoneValidator = (value: string): ValidatorResult => {\r\n    const result = /^[+]{0,1}[0-9]{8,}$/g.test(value);\r\n    return {\r\n        result,\r\n        reason: result ? `Phone ${VALIDATION_PASSED}` : INVALID_PHONE,\r\n    };\r\n};\r\n\r\nconst passwordValidator = (value: string): ValidatorResult => {\r\n    const result = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/gm.test(value);\r\n    return {\r\n        result,\r\n        reason: result ? `Password ${VALIDATION_PASSED}` : INVALID_PASSWORD,\r\n    };\r\n};\r\n\r\nexport const validators = {\r\n    email: emailValidator,\r\n    basic: basicValidator,\r\n    phone: phoneValidator,\r\n    password: passwordValidator,\r\n};\r\n\r\nexport type Validators = keyof typeof validators;\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    TextInputProps,\r\n    NativeSyntheticEvent,\r\n    TextInputEndEditingEventData,\r\n    StyleProp,\r\n    ViewStyle,\r\n    TextStyle,\r\n} from 'react-native';\r\nimport { styles } from './styles';\r\nimport { validators, Validators } from './validators';\r\n\r\nexport interface ReactNativeInput extends TextInputProps {\r\n    validators?: Validators[];\r\n    errorViewStyles?: StyleProp<ViewStyle>;\r\n    errorTextStyles?: StyleProp<TextStyle>;\r\n    errorMessage?: string;\r\n    validateOn?: 'start-editing' | 'end-editing' | 'never';\r\n}\r\n\r\nconst Input: React.FC<ReactNativeInput> = ({\r\n    style,\r\n    onChangeText,\r\n    value,\r\n    validators: validatorTypes = [],\r\n    errorViewStyles,\r\n    errorTextStyles,\r\n    errorMessage: errorMsg,\r\n    validateOn = 'end-editing',\r\n    ...rest\r\n}) => {\r\n    const [hasError, setHasError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const validateInput = (val: string) => {\r\n        if (validatorTypes.length > 0) {\r\n            const validations = validatorTypes.map(type => {\r\n                const currentValidator = validators[type];\r\n                return currentValidator(val);\r\n            });\r\n            const result = validations.reduce((prev, cur) => {\r\n                /* return failed validation if any one validation fails */\r\n                return {\r\n                    result: prev.result && cur.result,\r\n                    reason: !prev.result ? prev.reason : cur.reason,\r\n                };\r\n            });\r\n            return result;\r\n        }\r\n        return {\r\n            result: true,\r\n            reason: 'All validations passed',\r\n        };\r\n    };\r\n    const handleSuccess = (val: string) => {\r\n        setHasError(false);\r\n        setErrorMessage('');\r\n        if (onChangeText != undefined) {\r\n            onChangeText(val);\r\n        }\r\n    };\r\n    const handleError = (error: string) => {\r\n        setErrorMessage(error);\r\n        setHasError(true);\r\n    };\r\n    const handleChange = (val: string) => {\r\n        handleSuccess(val);\r\n        if (validateOn == 'start-editing') {\r\n            const validation = validateInput(val);\r\n            if (!validation.result) {\r\n                handleError(validation.reason);\r\n            }\r\n        }\r\n        return;\r\n    };\r\n    const handleBlur = (evt: NativeSyntheticEvent<TextInputEndEditingEventData>) => {\r\n        if (validateOn == 'end-editing') {\r\n            const validation = validateInput(evt.nativeEvent.text);\r\n            if (validation.result) {\r\n                handleSuccess(evt.nativeEvent.text);\r\n            } else {\r\n                handleError(validation.reason);\r\n            }\r\n        }\r\n        return;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TextInput\r\n                onChangeText={handleChange}\r\n                onEndEditing={handleBlur}\r\n                value={value}\r\n                {...rest}\r\n                style={[styles.defaultInput, style]}\r\n            />\r\n            {hasError && (\r\n                <View style={[styles.defaultError, errorViewStyles]}>\r\n                    <Text style={[styles.defaultErrorText, errorTextStyles]}>\r\n                        {errorMsg || errorMessage}\r\n                    </Text>\r\n                </View>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n"],"names":["StyleSheet","useState","React.createElement","TextInput","View","Text"],"mappings":"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"}